name: Deploy Web1 Backend

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: [ self-hosted, oci, web1 ]
    env:
      RELEASES_DIR: /srv/web1-api/releases
      CURRENT_LINK: /srv/web1-api/current
      SERVICE: web1-api
      HOSTS: ${{ secrets.HOST2 }}            # ← SOLO nodo2 por ahora
      SSH_USER: ${{ secrets.SSH_USER }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install deps & build (NestJS)
        run: |
          npm ci
          npm run build
          # Dependencias de runtime (sin dev)
          npm ci --omit=dev
          tar -czf web1-api.tar.gz dist node_modules package.json package-lock.json
          ls -lh web1-api.tar.gz
      - name: Prepare SSH key
        run: |
          install -m 600 /dev/null ~/.ssh/id_ed25519
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          for H in $HOSTS; do ssh-keyscan -H $H >> ~/.ssh/known_hosts 2>/dev/null || true; done
      - name: Upload & activate release
        run: |
          TS=$(date +%Y%m%d%H%M%S)
          for H in $HOSTS; do
            echo ">>> Deploy API en $H"
            ssh -i ~/.ssh/id_ed25519 ${SSH_USER}@$H "sudo mkdir -p $RELEASES_DIR/${TS} && sudo chown -R www-data:www-data $RELEASES_DIR"
            scp -i ~/.ssh/id_ed25519 web1-api.tar.gz ${SSH_USER}@$H:/tmp/
            ssh -i ~/.ssh/id_ed25519 ${SSH_USER}@$H "\
              sudo tar -xzf /tmp/web1-api.tar.gz -C $RELEASES_DIR/${TS} && \
              sudo chown -R www-data:www-data $RELEASES_DIR/${TS} && \
              sudo ln -sfn $RELEASES_DIR/${TS} $CURRENT_LINK && \
              sudo systemctl restart ${SERVICE} && \
              sleep 2 && \
              (curl -fsS http://127.0.0.1:4000/ >/dev/null || curl -fsS http://127.0.0.1:4000/health >/dev/null || true) \
            " || { echo 'FALLO en deploy backend'; exit 1; }
          done
